{"version":3,"sources":["api/http.js","api/observations.js","api/sources.js","state/observations/actions.js","state/observations/reducer.js","state/reducers.js","views/hooks/useStations.js","views/utils/timeIntervalFormatter.js","views/hooks/useTimeIntervals.js","views/components/ObservationsInfo.js","views/components/ObservationsTable.js","views/pages/ObservationsPage.js","views/hooks/useObservations.js","views/layouts/App.js","index.js","state/store.js"],"names":["Axios","create","baseURL","process","auth","username","password","params","http","get","getObservationsState","getState","observations","createObservationsFilter","statePortion","station","timeInterval","elements","sources","id","referencetime","from","to","join","GET_ASYNC","GET_SUCCESS","GET_ERROR","SET_STATION","CLEAR_ERROR","getObservations","dispatch","a","async","state","filter","type","payload","ObservationsAPI","response","data","clearError","initialState","stationsFilter","types","country","municipality","stations","timeIntervals","error","loading","combineReducers","action","useDispatch","useSelector","useEffect","SourcesAPI","setStation","formatPastDate","daysAgo","format","subDays","Date","today","yesterday","sevenDaysAgo","thirtyDaysAgo","name","formatter","setTimeInterval","useStyles","makeStyles","theme","root","flexGrow","paper","paddingLeft","spacing","paddingRight","paddingTop","marginTop","marginBottom","createTypography","label","value","Typography","variant","color","component","gutterBottom","display","props","classes","count","className","Paper","Grid","container","item","xs","shortName","maxHeight","createTableRow","obsAtRefTime","index","formattedDate","referenceTime","TableRow","hover","key","sourceId","TableCell","scope","parentIndex","initialValues","Array","fill","reduce","values","observation","elementId","map","align","createTableCells","TableContainer","Table","stickyHeader","size","TableHead","TableBody","Alert","elevation","createStyles","backdrop","zIndex","drawer","filtersContainer","formControl","margin","minWidth","selectEmpty","selectStation","width","selectTimeInt","useStations","errorStations","useTimeIntervals","selectTimeInterval","useObservations","errorObservations","ObservationsInfo","length","FormControl","InputLabel","Select","labelId","onChange","event","find","target","MenuItem","FormHelperText","ObservationsTable","Backdrop","open","CircularProgress","Snackbar","severity","onClose","reason","appBar","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","LIST_ITEMS","text","icon","store","createStore","reducers","applyMiddleware","thunk","next","console","group","info","result","log","groupEnd","ReactDOM","render","useTheme","useState","setOpen","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","aria-label","onClick","edge","noWrap","Drawer","direction","Divider","List","ListItem","button","selected","ListItemIcon","ListItemText","primary","ObservationsPage","document","getElementById"],"mappings":"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","file":"static/js/main.d6735bcd.chunk.js","sourcesContent":["import Axios from 'axios';\n\n/**\n * Axios instance for calling Frost API endpoints.\n */\nexport default Axios.create({\n  baseURL: process.env.REACT_APP_FROST_API_BASE_URL,\n  auth: {\n    username: process.env.REACT_APP_FROST_CLIENT_ID,\n    password: process.env.REACT_APP_FROST_CLIENT_PASSWORD\n  }\n});\n","// @flow\nimport { AxiosResponse } from 'axios';\nimport http from './http';\nimport type { ObservationResponse, ObservationsFilter } from './types';\n\nexport default {\n\n  /**\n   * Retrieves observation data.\n   * \n   * @param {ObservationsFilter} params Query parameters.\n   */\n  async getObservations(params: ObservationsFilter): AxiosResponse<ObservationResponse> {\n    return await http.get('observations/v0.jsonld', { params });\n  }\n};\n","// @flow\nimport { AxiosResponse } from 'axios';\nimport http from './http';\nimport type { SourceResponse, SourcesFilter } from './types';\n\nexport default {\n\n  /**\n   * Retrieves metadata for the source entities defined in the Frost API.\n   * \n   * @param {SourcesFilter} params (optional) Query parameters.\n   */\n  async getSources(params: SourcesFilter = {}): AxiosResponse<SourceResponse> {\n    return await http.get('sources/v0.jsonld', { params });\n  }\n};\n","// @flow\nimport { ThunkAction } from 'redux-thunk';\nimport ObservationsAPI from '../../api/observations';\nimport SourcesAPI from '../../api/sources';\nimport type { ObservationsFilter } from '../../api/types';\nimport type { State, ObservationsState, Station, TimeInterval, Action } from '../types';\n\nconst getObservationsState = (getState: () => State): ObservationsState => \n  getState().observations;\n\nconst createObservationsFilter = (\n  statePortion: { \n    station: ?Station, \n    timeInterval: ?TimeInterval,\n    elements: Array<string>\n  }\n): ?ObservationsFilter => {\n  const { station, timeInterval, elements } = statePortion;\n  return (station && timeInterval) \n    ? {\n      sources: station.id,\n      referencetime: `${timeInterval.from}/${timeInterval.to}`,\n      elements: elements.join(',')\n    }\n    : null;\n};\n\n// -- Action Types\n\nexport const GET_ASYNC = 'observations/GET_OBSERVATIONS_ASYNC';\nexport const GET_SUCCESS = 'observations/GET_OBSERVATIONS_SUCCESS';\nexport const GET_ERROR = 'observations/GET_OBSERVATIONS_ERROR';\nexport const GET_STATIONS_ASYNC = 'observations/GET_STATIONS_ASYNC';\nexport const GET_STATIONS_SUCCESS = 'observations/GET_STATIONS_SUCCESS';\nexport const GET_STATIONS_ERROR = 'observations/GET_STATIONS_ERROR';\nexport const SET_STATION = 'observations/SET_STATION';\nexport const SET_TIME_INTERVAL = 'observations/SET_TIME_INTERVAL';\nexport const CLEAR_ERROR = 'observations/CLEAR_ERROR';\n\n// -- Action Creators\n\nexport const getObservations = (): ThunkAction => {\n  return async (dispatch, getState) => {\n    const state = getObservationsState(getState);\n    const filter = createObservationsFilter({ ...state });\n\n    if (filter) {\n      dispatch({\n        type: GET_ASYNC,\n        payload: null\n      });\n\n      try {\n        const response = await ObservationsAPI.getObservations(filter);\n\n        dispatch({\n          type: GET_SUCCESS,\n          payload: response.data\n        });\n      } catch (error) {\n        dispatch({\n          type: GET_ERROR,\n          payload: error.response.data\n        });\n      }\n    }\n  };\n};\n\nexport const getStations = (): ThunkAction => {\n  return async (dispatch, getState) => {\n    const filter = getObservationsState(getState).stationsFilter;\n  \n    try {\n      dispatch({\n        type: GET_STATIONS_ASYNC,\n        payload: null\n      });\n\n      const response = await SourcesAPI.getSources(filter);\n\n      dispatch({\n        type: GET_STATIONS_SUCCESS,\n        payload: response.data\n      });\n    } catch (error) {\n      dispatch({\n        type: GET_STATIONS_ERROR,\n        payload: error.response.data\n      });\n    }\n  };\n};\n\nexport const setStation = (station: Station): ThunkAction => {\n  return async (dispatch, getState) => {\n    dispatch({\n      type: SET_STATION,\n      payload: station\n    });\n\n    await getObservations()(dispatch, getState);\n  };\n};\n\nexport const setTimeInterval = (timeInterval: TimeInterval): ThunkAction => {\n  return async (dispatch, getState) => {\n    dispatch({\n      type: SET_TIME_INTERVAL,\n      payload: timeInterval\n    });\n\n    await getObservations()(dispatch, getState);\n  };\n};\n\nexport const clearError = (): Action => ({\n  type: CLEAR_ERROR,\n  payload: null\n});\n","// @flow\nimport { \n  GET_ASYNC,\n  GET_SUCCESS, \n  GET_ERROR,\n  GET_STATIONS_SUCCESS,\n  GET_STATIONS_ERROR,\n  SET_STATION, \n  SET_TIME_INTERVAL,\n  CLEAR_ERROR\n} from './actions';\nimport type { Action, ObservationsState } from '../types';\n\nconst initialState: ObservationsState = {\n  stationsFilter: {\n    types: 'SensorSystem',\n    country: 'NO',\n    municipality: 'OSLO'\n  },\n  stations: [],\n  station: null,\n  timeIntervals: [\n    'Today',\n    'Yesterday',\n    'Last 7 Days',\n    'Last 30 Days'\n  ],\n  timeInterval: null,\n  observations: [],\n  elements: [\n    'air_temperature', \n    'wind_speed', \n    'boolean_fair_weather(cloud_area_fraction P1D)'\n  ],\n  error: null,\n  loading: false,\n};\n\nexport default (\n  state: ObservationsState = initialState, \n  action: Action\n): ObservationsState => {\n  switch (action.type) {\n    case GET_ASYNC:\n      return { \n        ...state, \n        loading: true,\n        observations: [],\n        error: null\n      };\n\n    case GET_SUCCESS:\n      return { \n        ...state, \n        observations: action.payload.data,\n        error: null,\n        loading: false\n      };\n\n    case GET_ERROR:\n      return { \n        ...state, \n        error: action.payload.error,\n        observations: [],\n        loading: false\n      };\n\n    case GET_STATIONS_SUCCESS:\n      return {\n        ...state,\n        stations: action.payload.data\n      };\n\n    case GET_STATIONS_ERROR:\n      return {\n        ...state,\n        error: action.payload.error\n      };\n\n    case SET_STATION:\n      return {\n        ...state,\n        station: action.payload\n      };\n\n    case SET_TIME_INTERVAL:\n      return {\n        ...state,\n        timeInterval: action.payload\n      };\n\n    case CLEAR_ERROR:\n      return {\n        ...state,\n        error: null\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport observations from './observations/reducer'\n\nexport default combineReducers({\n  observations\n});\n","// @flow\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport type { Station, State } from '../../state/types';\nimport { getStations, setStation, clearError } from '../../state/observations/actions';\n\nexport default () => {\n  const dispatch = useDispatch();\n  const { error, stations, station } = useSelector(\n    ({ observations }: State) => observations\n  );\n\n  useEffect(() => {\n    dispatch(getStations());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return [\n    error, // <-- error object, if any\n    stations, // <-- list of stations\n    station, // <-- selected station\n    (station: ?Station) => { // <-- selectStation\n      if (station) {\n        dispatch(setStation(station));\n      }\n    },\n    () => { // <-- clearError\n      dispatch(clearError());\n    }\n  ];\n};\n","// @flow\nimport format from 'date-fns/format';\nimport subDays from 'date-fns/subDays';\n\nexport const formatPastDate = (daysAgo: number = 0) =>\n  format(subDays(new Date(), daysAgo), 'yyyy-MM-dd');\n\nexport default {\n  'Today': () => {\n    const today = formatPastDate();\n    return ['R24/' + today, today + '/PT1H'];\n  },\n  'Yesterday': () => {\n    const yesterday = formatPastDate(1);\n    return ['R24/' + yesterday, yesterday + '/PT1H'];\n  },\n  'Last 7 Days': () => {\n    const sevenDaysAgo = formatPastDate(7);\n    return [`R7/${sevenDaysAgo}T12`, `${sevenDaysAgo}T12/P1D`];\n  },\n  'Last 30 Days': () => {\n    const thirtyDaysAgo = formatPastDate(30);\n    return [`R30/${thirtyDaysAgo}T12`, `${thirtyDaysAgo}T12/P1D`];\n  }\n};\n","// @flow\nimport { useSelector, useDispatch } from 'react-redux';\nimport type { State } from '../../state/types';\nimport { setTimeInterval } from '../../state/observations/actions';\nimport formatter from '../utils/timeIntervalFormatter';\n\nexport default () => {\n  const dispatch = useDispatch();\n  const { timeIntervals, timeInterval }  = useSelector(\n    ({ observations }: State) => observations\n  );\n\n  return [\n    timeIntervals, // <-- list of time intervals\n    timeInterval, // <-- selected time interval\n    (name: ?string) => { // <-- dispatcher\n      if (name && formatter[name]) {\n        const [from, to] = formatter[name]();\n        dispatch(setTimeInterval({ name, from, to }));\n      }\n    }\n  ];\n};\n","// @flow\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, Typography, Grid } from '@material-ui/core';\nimport type { Station, TimeInterval } from '../../state/types';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    paddingTop: theme.spacing(1),\n    marginTop: 15,\n    marginBottom: 20,\n  },\n}));\n\nconst createTypography = (label: string, value: string | number) => {\n  return (\n    <Typography \n      variant=\"body2\" \n      color=\"textSecondary\" \n      component=\"div\"\n      gutterBottom\n    >\n      {label}:&nbsp;\n      <Typography variant=\"body2\" color=\"textPrimary\" display=\"inline\">\n        {value}\n      </Typography>\n    </Typography>\n  );\n};\n\nexport default (props: {\n  station: Station,\n  timeInterval: TimeInterval,\n  count: number\n}) => {\n  const classes = useStyles();\n  const { station, timeInterval, count } = props;\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <Typography \n          variant=\"overline\" \n          component=\"h6\"\n          gutterBottom\n        >\n          <strong>Information</strong>\n        </Typography>\n        <Grid container spacing={3}>\n          <Grid item xs>\n            {createTypography('Station ID', station ? station.id : '')}\n            {createTypography('Name', station ? station.name : '')}\n            {createTypography('Short Name', station ? station.shortName : '')}\n            {createTypography('Municipality', station ? station.municipality : '')}\n          </Grid>\n          <Grid item xs>\n            {createTypography('Reference Time', timeInterval ? \n              `${timeInterval.from}/${timeInterval.to}` : ''\n            )}\n            {createTypography('Observations Count', station && timeInterval ?\n              count : ''\n            )}\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n};\n","// @flow\nimport React from 'react';\nimport {\n  Paper,\n  Table,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TableBody,\n  makeStyles,\n} from '@material-ui/core';\nimport format from 'date-fns/format'\nimport type { ObservationsAtRefTime, Observation } from '../../api/types';\n\nconst useStyles = makeStyles({\n  container: {\n    maxHeight: 440,\n  },\n});\n\nconst createTableCells = (\n  observations: Array<Observation>, \n  sourceId: string,\n  parentIndex: number\n) => {\n  const initialValues = Array(3).fill(null);\n  return observations\n    .reduce(\n      (values: Array<string>, observation: Observation) => {\n        switch (observation.elementId) {\n          case 'air_temperature':\n            values[0] = observation.value;\n            return values;\n\n          case 'wind_speed':\n            values[1] = observation.value;\n            return values;\n\n          case 'boolean_fair_weather(cloud_area_fraction P1D)':\n            values[2] = observation.value === '0' ? 'Cloudy' : 'Sunny';\n            return values;\n\n          default:\n            return values;\n        }\n      }, initialValues\n    )\n    .map((value: string, index: number) =>\n        <TableCell \n          align='right' \n          key={`${sourceId}:${parentIndex}-${index}`}\n        >\n          {value || '-'}\n        </TableCell>\n      );\n};\n\nconst createTableRow = (obsAtRefTime: ObservationsAtRefTime, index: number) => {\n  const formattedDate = format(new Date(obsAtRefTime.referenceTime), 'PPpp');\n  return (\n    <TableRow hover key={`${obsAtRefTime.sourceId}:${index}`}>\n      <TableCell component='th' scope='row'>\n        {formattedDate}\n      </TableCell>\n      {createTableCells(obsAtRefTime.observations, obsAtRefTime.sourceId, index)}\n    </TableRow>\n  );\n};\n\nexport default ({ data }: { data: Array<ObservationsAtRefTime>}) => {\n  const classes = useStyles();\n  return (\n    <TableContainer component={Paper} className={classes.container}>\n      <Table stickyHeader size='small'>\n        <TableHead>\n          <TableRow>\n            <TableCell>Date &amp; Time</TableCell>\n            <TableCell align='right'>Air Temperature&nbsp;(°C)</TableCell>\n            <TableCell align='right'>Wind Speed&nbsp;(m/s)</TableCell>\n            <TableCell align='right'>Weather</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.map(createTableRow)}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};","// @flow\nimport React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { \n  Backdrop,\n  CircularProgress,\n  FormControl, \n  FormHelperText, \n  InputLabel,\n  MenuItem,\n  Select,\n  Snackbar,\n  Typography,\n} from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport type { Station } from '../../state/types';\nimport useStations from '../hooks/useStations';\nimport useTimeIntervals from '../hooks/useTimeIntervals';\nimport useObservations from '../hooks/useObservations';\nimport ObservationsInfo from '../components/ObservationsInfo';\nimport ObservationsTable from '../components/ObservationsTable';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: '#fff',\n    },\n    filtersContainer: {\n      marginBottom: 20\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n    selectStation: {\n      width: 280\n    },\n    selectTimeInt: {\n      width: 200\n    },\n  }),\n);\n\nexport default () => {\n  const classes = useStyles();\n\n  const [\n    errorStations,\n    stations,\n    station,\n    selectStation\n  ] = useStations();\n\n  const [\n    timeIntervals,\n    timeInterval,\n    selectTimeInterval\n  ] = useTimeIntervals();\n\n  const [\n    loading,\n    errorObservations,\n    observations,\n    clearError\n  ] = useObservations();\n\n  const error = errorStations || errorObservations || null;\n\n  const handleStationChange = (event: any) => {\n    selectStation(\n      stations.find(\n        station => station.id === event.target.value\n      )\n    );\n  };\n\n  const handleTimeIntervalChange = (event: any) => {\n    selectTimeInterval(event.target.value);\n  };\n\n  return (\n    <div>\n      <Typography variant=\"h6\" component=\"h2\">\n        Observations\n      </Typography>\n      <ObservationsInfo\n        station={station} \n        timeInterval={timeInterval}\n        count={observations.length}\n      />\n      <div className={classes.filtersContainer}>\n        <FormControl className={classes.formControl}>\n          <InputLabel id=\"station-select\">Station</InputLabel>\n          <Select\n            className={classes.selectStation}\n            labelId=\"station-select\"\n            id=\"station-select\"\n            value={station ? station.id : ''}\n            onChange={handleStationChange}\n          >\n            {stations.map(({ id, name }: Station) =>\n              <MenuItem key={id} value={id}>{id} - {name}</MenuItem>\n            )}\n          </Select>\n          {!station && <FormHelperText>Required</FormHelperText>}\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel id=\"time-interval-select\">Time Range</InputLabel>\n          <Select\n            className={classes.selectTimeInt}\n            labelId=\"time-interval-select\"\n            id=\"time-interval-select\"\n            value={timeInterval ? timeInterval.name :''}\n            onChange={handleTimeIntervalChange}\n          >\n            {timeIntervals.map((name: string) =>\n              <MenuItem key={name} value={name}>{name}</MenuItem>\n            )}\n          </Select>\n          {!timeInterval && <FormHelperText>Required</FormHelperText>}\n        </FormControl>\n      </div>\n      <ObservationsTable data={observations} />\n      <Backdrop className={classes.backdrop} open={loading}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <Snackbar open={!!error}>\n        <Alert severity=\"error\" onClose={clearError}>\n          {error && error.reason}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n};\n","// @flow\nimport { useSelector, useDispatch } from 'react-redux';\nimport type { State } from '../../state/types';\nimport { clearError } from '../../state/observations/actions';\n\nexport default () => {\n  const dispatch = useDispatch();\n  const { loading, error, observations } = useSelector(\n    ({ observations }: State) => observations\n  );\n\n  return [\n    loading, // <-- loading indicator\n    error, // <-- error object, if any\n    observations, // <-- list of observations\n    () => { // <-- clearError\n      dispatch(clearError());\n    }\n  ];\n};\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\n\n// -- @material-ui/core\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\n// -- @material-ui/icons\nimport AcUnitIcon from '@material-ui/icons/AcUnit';\nimport CategoryIcon from '@material-ui/icons/Category';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ExploreIcon from '@material-ui/icons/Explore';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport ObservationsPage from '../pages/ObservationsPage';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nconst LIST_ITEMS = [\n  {\n    text: 'Observations',\n    icon: <AcUnitIcon />\n  },\n  {\n    text: 'Sources',\n    icon: <ExploreIcon />\n  },\n  {\n    text: 'Elements',\n    icon: <CategoryIcon />\n  },\n  {\n    text: 'Locations',\n    icon: <LocationOnIcon />\n  }\n];\n\nexport default () => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Frost Web Application\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {LIST_ITEMS.map(({ text, icon }, index) => (\n            <ListItem button key={text} selected={index === 0}>\n              <ListItemIcon>{icon}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <ObservationsPage />\n      </main>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './state/store';\nimport App from './views/layouts/App';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers';\n\nexport default function configureStore () {\n\n  /**\n   * Logs all actions and states after they are dispatched.\n   */\n  const logger = store => next => action => {\n    console.group(action.type);\n    console.info('dispatching', action);\n    let result = next(action);\n    console.log('next state', store.getState());\n    console.groupEnd();\n    return result;\n  };\n\n  return createStore(reducers, applyMiddleware(thunk, logger));\n};\n"],"sourceRoot":""}